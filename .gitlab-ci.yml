stages:
  - build
  - deploy

include:
  - ".gitlab-ci.tests.yml"
  - ".gitlab-ci.sonarqube.yml"
# Frontend Build
build-frontend:
  stage: build
  image: node:18
  tags:
    - deploy
    - digitalocean
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/
    expire_in: 1 week  # Artefacten blijven een week beschikbaar

# Backend Build
build-backend:
  stage: build
  tags:
    - deploy
    - digitalocean
  image: gradle:8.10.1-jdk21
  script:
    - cd backend
    - ./gradlew build
  artifacts:
    paths:
      - backend/build/libs/
    expire_in: 1 week

# Deployment
deploy-frontend:
  stage: deploy
  tags:
    - deploy
    - digitalocean
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh  # Installeer OpenSSH
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_DIGITALOCEAN" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts
  script:
    - scp -r frontend/dist/* $SERVER_USER@$DROPLET_IP:/var/www/vue-app/
    - ssh $SERVER_USER@$DROPLET_IP 'sudo systemctl restart nginx'
  only:
    - deploy/production

deploy-backend:
  stage: deploy
  tags:
    - deploy
    - digitalocean
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh  # Installeer OpenSSH
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY_DIGITALOCEAN" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
  script:
    - scp backend/build/libs/*.jar $SERVER_USER@$DROPLET_IP:/opt/elections/
    - ssh $SERVER_USER@$DROPLET_IP 'sudo systemctl restart elections'
  only:
    - deploy/production


